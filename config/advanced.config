[
 {rabbit,
  [{tcp_listeners, []}
  ]},

 {rabbitmq_web_stomp,
      [{ssl_config, [{port,       15673},
                     {backlog,    1024},
                     {cacertfile, "/Users/robert/rabbitmq/testca/cacert.pem"},
                     {certfile,   "/Users/robert/rabbitmq/server/cert.pem"},
                     {keyfile,    "/Users/robert/rabbitmq/server/key.pem"}
                     %% needed when private key has a passphrase
                     ]}]
 },

 {rabbitmq_management,
  [
   {listener, [{port,     15671},
               {ssl,      true},
               {ssl_opts, [
							 {cacertfile, "/Users/robert/rabbitmq/testca/cacert.pem"},
							 {certfile,   "/Users/robert/rabbitmq/server/cert.pem"},
							 {keyfile,    "/Users/robert/rabbitmq/server/key.pem"}
                           %% don't do peer verification to HTTPS clients
                           {verify,               verify_none},
                           {fail_if_no_peer_cert, false},

                           {client_renegotiation, false},
                           {secure_renegotiate,   true},
                           {honor_ecc_order,      true},
                           {honor_cipher_order,   true},

                           {versions,['tlsv1.1', 'tlsv1.2']},
                           {ciphers, ["ECDHE-ECDSA-AES256-GCM-SHA384",
                                      "ECDHE-RSA-AES256-GCM-SHA384",
                                      "ECDHE-ECDSA-AES256-SHA384",
                                      "ECDHE-RSA-AES256-SHA384",
                                      "ECDH-ECDSA-AES256-GCM-SHA384",
                                      "ECDH-RSA-AES256-GCM-SHA384",
                                      "ECDH-ECDSA-AES256-SHA384",
                                      "ECDH-RSA-AES256-SHA384",
                                      "DHE-RSA-AES256-GCM-SHA384"
                                      ]}
                           ]}
              ]}
  ]
 }
].
